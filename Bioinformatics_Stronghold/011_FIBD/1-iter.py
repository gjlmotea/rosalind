### === 思路，錯誤寫法
# n, m = 6, 3 # n: 回合數、m: 壽命幾個月
# r1, r2, r3 = 1, 0, 0  # 個別1~m個月大的兔子數量，初始已有1對1個月大新生兔
#
# for i in range(n - 1):  # 初始狀態已經是第1個月，所以n-1
#     r1 = r2*1 + r3*1 # 這回合，新生兔子就是所有上一輪成熟兔子x1（生一對）
#     r2 = r1 # 這回合2個月大兔子，就是上一輪的新生兔
#     r3 = r2 # 這回合3個月大兔子，就是上一輪的2個月大兔子
#     # 錯誤寫法：以上變數的更新順序有誤，覆蓋了資訊
#
# print(r1, r2, r3) # 0 0 0

### === 思路，正確寫法
# n, m = 6, 3 # n: 回合數、m: 壽命幾個月
# r1, r2, r3 = 1, 0, 0  # 不同月份大的兔子數量
#
# for i in range(n - 1):  # 初始狀態已經是第1個月，所以n-1
#     new_born = r2*1 + r3*1
#     r3 = r2
#     r2 = r1
#     r1 = new_born
#
# print(r1, r2, r3) # 2 1 1

n, m = 6, 3 # n: 回合數、m: 壽命幾個月
r = [0] * m # 不同月份大的兔子數量

print(r) # [0, 0, 0]
r[0] = 1 # 初始化第一隻兔子(1個月大)

for _ in range(n - 1):  # 初始狀態已經是第1個月，所以n-1
    new_born = sum(r[1:]) * 1 # 這回合新生兔 = 上回合所有老兔加總
    r = [new_born] + r[:-1] # 串列於頭加入 這回合的新生兔，串列於尾部踢掉老屁股（死掉的）
    # print(sum(r))

print(sum(r)) # 4
# 迭代運算較快

